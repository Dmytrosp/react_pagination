{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","arrOfPages","pageCount","Math","ceil","isPrevLinkDisabled","isNextLinkDisabled","i","push","className","classNames","disabled","href","onClick","map","item","active","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","length","lastItemOnPage","firstItemOnPage","visibleArr","slice","id","onChange","event","selectedOptionValue","Number","target","value","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAW1C,IANK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAuB,GACvBC,EAAoBC,KAAKC,KAAKP,GAASC,GACvCO,EAAqC,IAAhBN,EACrBO,EAAqBP,IAAgBG,EAElCK,EAAI,EAAGA,GAAKL,EAAWK,GAAK,EACnCN,EAAWO,KAAKD,GAelB,OACE,qBAAIE,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAAUN,IAFd,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAlBc,WACfR,GACHL,EAAaD,EAAc,IAWzB,oBAWDE,EAAWa,KAAI,SAACC,GAAD,OACd,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQjB,IAAgBgB,IAF5B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMb,EAAae,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUL,IAFd,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QA1Dc,WACfP,GACHN,EAAaD,EAAc,IAmDzB,wBCxER,IAAMkB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDDKE,CAAW,EAAG,IAAIR,KAAI,SAACO,GAAD,qBAAeA,MAEtCE,EAAgB,WAC3B,MAA8BC,mBAAiB,GAA/C,mBAAO1B,EAAP,KAAgB2B,EAAhB,KACA,EAAsCD,mBAAiB,GAAvD,mBAAOzB,EAAP,KAAoB2B,EAApB,KACM7B,EAAQoB,EAAMU,OACdC,EAAiB9B,EAAUC,EAC3B8B,EAAkBD,EAAiB9B,EAAU,EAC7CgC,EAAab,EAAMc,MAAMF,EAAkB,EAAGD,GAapD,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiC8B,EADjC,cAEID,EAAiB/B,EAAQA,EAAQ+B,EAFrC,eAGS/B,EAHT,OAMA,sBAAKY,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SAvBiB,SAACC,GAC1B,IAAMC,EAAsBC,OAAOF,EAAMG,OAAOC,OAEhDb,EAAWU,GACXT,EAAe,IAoBPY,MAAOxC,EALT,UAOE,wBAAQwC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA9Ce,SAACwC,GACpBd,EAAec,MA+Cb,6BACGV,EAAWhB,KAAI,SAACC,GAAD,OACd,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YE/DlC0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e4d299c9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const arrOfPages: number[] = [];\n  const pageCount: number = Math.ceil(total / +perPage);\n  const isPrevLinkDisabled = currentPage === 1;\n  const isNextLinkDisabled = currentPage === pageCount;\n\n  for (let i = 1; i <= pageCount; i += 1) {\n    arrOfPages.push(i);\n  }\n\n  const nextLinkClick = () => {\n    if (!isNextLinkDisabled) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const prevLinkClick = () => {\n    if (!isPrevLinkDisabled) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: isPrevLinkDisabled,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPrevLinkDisabled}\n          onClick={prevLinkClick}\n        >\n          «\n        </a>\n      </li>\n\n      {arrOfPages.map((item) => (\n        <li\n          className={classNames('page-item', {\n            active: currentPage === item,\n          })}\n          key={item}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => onPageChange(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: isNextLinkDisabled,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isNextLinkDisabled}\n          onClick={nextLinkClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, ChangeEvent } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const total = items.length;\n  const lastItemOnPage = perPage * currentPage;\n  const firstItemOnPage = lastItemOnPage - perPage + 1;\n  const visibleArr = items.slice(firstItemOnPage - 1, lastItemOnPage);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleSelectChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const selectedOptionValue = Number(event.target.value);\n\n    setPerPage(selectedOptionValue);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${\n          lastItemOnPage > total ? total : lastItemOnPage\n        } of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelectChange}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {visibleArr.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}